# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# resources:
#   repositories:
#     - repository: self
    # - repository: LatexRepo
    #   type: github
    #   endpoint: 
    #   name: alex-bax/DevOps
resources:
  - repo: self

trigger:
  - main

variables:
  tag: '$(Build.BuildId)'
  ImageName: 'neutralsminitwit:$(Build.BuildId)'

stages:
    - stage: Build_Test_Analyse 
      displayName: Test
      pool:
        vmImage: ubuntu-latest
      jobs:
      - job: Build_Publish
        #dependsOn: 'RunInferSharp'
        displayName: SonarCloud Prepare and Test
      
        steps:
            - checkout: self
              persistCredentials: true
            - task: SonarCloudPrepare@1
              inputs:
                SonarCloud: 'SonarCloud-MiniTwit'
                organization: 'devopsgrouph'
                scannerMode: 'MSBuild'
                projectKey: 'albertbethlowsky_DevOpsGroupH'
                projectName: 'DevOpsGroupH'
                extraProperties: |
                  sonar.exclusions=**/obj/**,**/*.dll
                  sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
                  sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx

            - task: DotNetCoreCLI@2
              displayName: 'dotnet test'
              inputs:
                command: test
                projects: '**/*HomeControllerTests/*.csproj'
                arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx'
                publishTestResults: true
            #arguments: "--configuration $(BuildConfiguration)"
            
      - job: Build_ACR_Publish
        displayName: Build ACR and publish
        steps:
          - task: Docker@2
            displayName: 'Build and push an image to container registry'
            inputs:
              command: buildAndPush
              repository: 'NeutralsMinitwit'
              dockerfile: '$(Build.SourcesDirectory)/mvc-minitwit/Dockerfile'
              containerRegistry: 'ACR - with Albert subscription' # name of ACR service from connection
              buildContext: '.'
              tags: |
                $(tag)
          - task: GitHubRelease@1
            inputs:
              gitHubConnection: 'albertbethlowsky'
              repositoryName: '$(Build.Repository.Name)'
              action: 'create'
              target: '$(Build.SourceVersion)'
              tagSource: 'gitTag'
              tagPattern: 'release-v[0-9]*\S*'
              changeLogCompareToRelease: 'lastFullRelease'
              changeLogType: 'commitBased'
              title: '$(Build.BuildNumber)'
              addChangeLog: true

            # - checkout: DevOps
            # - checkout: git://MiniTwit/LatexDevOps
            
            # - script: | 
                
            #     git config --global user.email "alex.tennis@live.dk"
            #     git config --global user.name "alex-bax"
            #     git clone https://github.com/alex-bax/DevOps.git
            #     echo $(ls) 
            #     sudo apt-get install texlive     
            #     echo Starting pdflatex
            #     pdflatex -interaction=nonstopmode main.tex

            #     echo WORKING DIR $PWD
            #     echo sourcesdir $(Build.SourcesDirectory)
            #     echo builartifact $(Build.ArtifactStagingDirectory)
            #     echo Done pdflatex.
      - job: SonarCloud_Finish
        displayName: SonarCloud analysis and publish
        steps:
          - task: SonarCloudAnalyze@1
            displayName: 'Run SonarCloud analysis'
          - task: SonarCloudPublish@1
            displayName: 'SonarCloud publish'
            inputs:
              pollingTimeoutSec: '300'
            
          
            
