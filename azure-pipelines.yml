# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

resources:
  - repo: self

trigger:
  - main

variables:
  tag: '$(Build.BuildId)'
  ImageName: 'neutralsminitwit:$(Build.BuildId)'

stages:
    - stage: Test_Analyse_Build 
      displayName: Test
      pool:
        vmImage: ubuntu-latest
      jobs:
      - job: Test
        #dependsOn: 'RunInferSharp'
        displayName: Test and Analyse
      
        steps:
            - task: SonarCloudPrepare@1
              inputs:
                SonarCloud: 'SonarCloud-MiniTwit'
                organization: 'devopsgrouph'
                scannerMode: 'MSBuild'
                projectKey: 'albertbethlowsky_DevOpsGroupH'
                projectName: 'DevOpsGroupH'
                extraProperties: |
                  sonar.exclusions=**/obj/**,**/*.dll
                  sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
                  sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
            - task: DotNetCoreCLI@2
              inputs:
                command: 'test'
                projects: '**/*HomeControllerTests/*.csproj'
                arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx'
                publishTestResults: true
                testRunTitle: 'dotnet test v2'
           # - task: DotNetCoreCLI@2
            #  displayName: 'dotnet test'
             # inputs:
             #   command: test
             #   projects: '**/*HomeControllerTests/*.csproj'
             #   arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx'
             #   publishTestResults: true
            #arguments: "--configuration $(BuildConfiguration)"
            - task: SonarCloudAnalyze@1
              displayName: 'Run SonarCloud analysis'
            - task: SonarCloudPublish@1
              displayName: 'SonarCloud publish'
              inputs:
                pollingTimeoutSec: '300'
                
      - job: Build_Publish
        dependsOn: 'Test'
        displayName: Build and push to ACR
        steps:
        - task: Docker@2
          displayName: 'Build and push an image to container registry'
          inputs:
            command: buildAndPush
            repository: 'NeutralsMinitwit'
            dockerfile: '$(Build.SourcesDirectory)/mvc-minitwit/Dockerfile'
            containerRegistry: 'ACR - with Albert subscription' # name of ACR service from connection
            buildContext: '.'
            tags: |
              $(tag)
        - task: GitHubRelease@1
          inputs:
            gitHubConnection: 'albertbethlowsky'
            repositoryName: '$(Build.Repository.Name)'
            action: 'create'
            target: '$(Build.SourceVersion)'
            tagSource: 'gitTag'
            tagPattern: 'release-v[0-9]*\S*'
            changeLogCompareToRelease: 'lastFullRelease'
            changeLogType: 'commitBased'
            title: '$(Build.BuildNumber)'
            addChangeLog: true
            
          
            
