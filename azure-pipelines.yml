trigger:
  branches:
    include:
      - main
variables:
  buildConfiguration: 'Release'
  location: 'North Europe'
  acrHostName: 'minitwit001acr.azurecr.io'
  acrName: 'minitwit001acr'
  rgName: 'minitwit001-rg'
  imageName: 'minitwit001'
  webAppName: 'minitwit001'

stages:
  # Build Stage
  - stage: BuildAndTest
    jobs:
      - job: BuildAndTest
        pool:
          vmImage: 'Ubuntu-16.04'
        steps:
          # Create or update the ACR resource
          - task: AzureResourceGroupDeployment@2
            displayName: 'Azure Deployment:Create Azure Container Registry'
            inputs:
              azureSubscription: 'DevOpsGroupH'
              resourceGroupName: '$(rgName)'
              location: $(location)
              csmFile: '$(System.DefaultWorkingDirectory)/**/containerRegistry-template.json'
              overrideParameters: '-registryName "$(acrName)" -registryLocation "$(location)" -registrySku standard'

          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 5.0.x
              installationPath: $(Agent.ToolsDirectory)/dotnet

          # Restore dependencies
          - task: DotNetCoreCLI@2
            displayName: 'dotnet restore'
            inputs:
              command: restore
              projects: '**/*.csproj'

          # Build app
          - task: DotNetCoreCLI@2
            displayName: 'dotnet build'
            inputs:
              command: build
              projects: '**/*.csproj'
              arguments: '--configuration $(buildConfiguration)'

          # Run unit tests
          - task: DotNetCoreCLI@2
            displayName: Test
            inputs:
              command: test
              projects: '**/*UnitTests/*.csproj'
              arguments: '--configuration $(BuildConfiguration)'

          # Publish the app
          - task: DotNetCoreCLI@2
            displayName: 'dotnet publish'
            inputs:
              command: publish
              publishWebProjects: True
              arguments: '--configuration $(BuildConfiguration) --output $(System.DefaultWorkingDirectory)/PublishedWebApp'
              zipAfterPublish: false

          # Build container image
          - task: Docker@1
            displayName: 'Build container image'
            inputs:
              azureSubscriptionEndpoint: 'DevOpsGroupH'
              azureContainerRegistry: '$(acrHostName)'
              imageName: '$(imageName):$(Build.BuildId)'
              useDefaultContext: false
              buildContext: '$(Build.Repository.LocalPath)'

          # Push container image
          - task: Docker@1
            displayName: 'Push container image'
            inputs:
              azureSubscriptionEndpoint: 'DevOpsGroupH'
              azureContainerRegistry: '$(acrHostName)'
              command: 'Push an image'
              imageName: '$(imageName):$(Build.BuildId)'

          # Copy ARM templates
          - task: CopyFiles@2
            displayName: 'Copy ARM templates'
            inputs:
              SourceFolder: ArmTemplates
              TargetFolder: '$(build.artifactstagingdirectory)'

          # Publish the app as an artifact
          - publish: $(Build.StagingDirectory)
            artifact: app

  # Staging release
  - stage: Staging
    jobs:
      - job: Release
        pool:
          vmImage: 'Ubuntu-16.04'
        steps:
          # Don't clone the repo
          - checkout: none

          # Download the published application artifact
          - download: current
            artifact: app

          # Create or update Azure App Service
          - task: AzureResourceGroupDeployment@2
            displayName: 'Azure Deployment:Create Azure App Service'
            inputs:
              azureSubscription: 'DevOpsGroupH'
              resourceGroupName: '$(rgName)'
              location: '$(location)'
              csmFile: '$(Pipeline.Workspace)/**/container-webapp-template.json'
              overrideParameters: '-webAppName $(webAppName) -hostingPlanName $(webAppName) -appInsightsLocation "$(location)" -sku "S1 Standard" -registryName $(acrName) -registryLocation "$(location)" -registrySku standard -imageName $(imageName):$(Build.BuildId)'

          # Deploy App Service
          - task: AzureRmWebAppDeployment@3
            displayName: 'Deploy Azure App Service'
            inputs:
              azureSubscription: 'DevOpsGroupH'
              appType: applinux
              WebAppName: $(webAppName)
              DockerNamespace: $(acrHostName)
              DockerRepository: $(webAppName)
              DockerImageTag: '$(Build.BuildId)'
              WebAppUri: webAppUrl
              TakeAppOfflineFlag: true
              UseWebDeploy: true
              RenameFilesFlag: true